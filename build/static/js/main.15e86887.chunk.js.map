{"version":3,"sources":["ui/lists-widgets/text/styles.module.css","ui/caret/styles.module.css","ui/list-components/styles.module.css","ui/lists/styles.module.css","ui/header/styles.module.css","styles.module.css","ui/caret/index.tsx","hooks/use-caret.ts","ui/lists-widgets/text/index.tsx","ui/lists-widgets/widgets.ts","ui/lists-widgets/slot.tsx","ui/list-components/index.tsx","ui/lists/index.tsx","ui/header/index.tsx","app.tsx","index.tsx"],"names":["module","exports","cx","classNames","bind","styles","Caret","coords","x","y","height","createPortal","className","style","transform","backgroundColor","document","getElementById","IGNORE_KEYS","BACKSPACE_KEY","ARROW_LEFT_KEY","ARROW_RIGHT_KEY","getCoords","node","text","scrollTopSize","documentElement","scrollTop","selection","window","getSelection","getRangeAt","getBoundingClientRect","current","offsetLeft","Placeholder","widgets","onBlur","refNode","useRef","useState","caretPosition","setCaretPosition","currentText","setCurrentText","setX","setY","setHeight","handleClick","useCallback","startOffset","handleChange","e","preventDefault","includes","key","length","left","substring","right","console","log","handleBlur","useEffect","range","Range","focusNode","setStart","collapse","removeAllRanges","addRange","useCaret","handleBlurTodo","ref","onClick","onKeyDown","tabIndex","contentEditable","suppressContentEditableWarning","ListsWidget","type","props","Widget","ListComponents","children","React","Children","map","child","Lists","Header","App","todos","setTodos","todo","id","nanoid","render"],"mappings":"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","file":"static/js/main.15e86887.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"styles_wrapper__ZdpNj\",\"text\":\"styles_text__Sgtn8\",\"placeholder\":\"styles_placeholder__IcNPX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"caret\":\"styles_caret__NpHK2\",\"name\":\"styles_name__39VyG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"child\":\"styles_child__2KUrp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lists\":\"styles_lists__2wrkZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__2Mz7c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__3q8Zo\"};","import { createPortal } from 'react-dom';\nimport classNames from 'classnames/bind';\nimport styles from './styles.module.css';\nimport { CaretProps } from './types';\n\nconst cx = classNames.bind(styles);\n\nexport const Caret = ({\n  coords: {\n    x, y, height\n  },\n}: CaretProps) => {\n  if (x === null || y === null) {\n    return null;\n  }\n\n  return createPortal(\n    <div\n      className={cx('caret')}\n      style={{\n        transform: `translate3d(${x}px, ${(y || 0)}px, 0px)`,\n        height: height || 0,\n        backgroundColor: 'var(--color-system-blue-light)'\n      }}\n    />,\n    // @ts-ignore\n    document.getElementById('caret')\n  );\n};\n","import { RefObject, useCallback, useEffect, useRef, useState } from 'react';\n\nexport type CaretPosition = number | null;\n\nexport type Coordinate = number | null;\n\nexport const IGNORE_KEYS = [\n  'Shift',\n\n  // Service keys\n  'Control',\n  'Alt',\n  'Meta',\n\n  // Arrows\n  'ArrowUp',\n  'ArrowDown',\n  'Enter',\n];\n\nexport const BACKSPACE_KEY = [\n  'Backspace'\n];\n\nexport const ARROW_LEFT_KEY = [\n  'ArrowLeft'\n];\n\nexport const ARROW_RIGHT_KEY = [\n  'ArrowRight'\n];\n\nconst getCoords = (node: RefObject<HTMLDivElement>, text: string | null) => {\n  const scrollTopSize = document.documentElement.scrollTop;\n\n  const selection = window.getSelection();\n\n  if (!selection) {\n    return {\n      x: null,\n      y: null,\n      height: null\n    };\n  }\n\n  const {\n    x, y, height,\n  } = selection.getRangeAt(0).getBoundingClientRect();\n\n  if (text === null || text === '') {\n    return {\n      x: node.current?.offsetLeft || 0,\n      y: y + scrollTopSize,\n      height\n    };\n  }\n\n  return {\n    x, y: y + scrollTopSize, height\n  };\n};\n\nexport const useCaret = (node: RefObject<HTMLDivElement>, text: string | null) => {\n  const [caretPosition, setCaretPosition] = useState<CaretPosition>(null);\n\n  const [currentText, setCurrentText] = useState(text);\n\n  const [x, setX] = useState<Coordinate>(null);\n  const [y, setY] = useState<Coordinate>(null);\n\n  const [height, setHeight] = useState<number | null>(null);\n\n  const handleClick = useCallback(() => {\n    const selection = window.getSelection();\n\n    if (!selection) {\n      return;\n    }\n\n    const coords = getCoords(node, currentText);\n\n    setX(coords.x);\n    setY(coords.y);\n\n    setHeight(coords.height);\n\n    if (currentText !== null && currentText !== '') {\n      setCaretPosition(selection.getRangeAt(0).startOffset);\n    } else {\n      setCaretPosition(0);\n    }\n  }, [node, currentText]);\n\n  const handleChange = useCallback((e: any) => {\n    e.preventDefault();\n\n    const coords = getCoords(node, currentText);\n\n    setX(coords.x);\n    setY(coords.y);\n\n    setHeight(coords.height);\n\n    if (IGNORE_KEYS.includes(e.key)) {\n      return;\n    }\n\n    if (ARROW_LEFT_KEY.includes(e.key)) {\n      if (caretPosition !== null && caretPosition !== 0) {\n        setCaretPosition(caretPosition - 1);\n      }\n      return;\n    }\n\n    if (ARROW_RIGHT_KEY.includes(e.key)) {\n      if (caretPosition !== null && currentText !== null && currentText !== '' && caretPosition < currentText.length) {\n        setCaretPosition(caretPosition + 1);\n      }\n      return;\n    }\n\n    if (BACKSPACE_KEY.includes(e.key)) {\n      if (currentText === null || currentText === '') {\n        return;\n      }\n\n      if (caretPosition === null || caretPosition === 0) {\n        return;\n      }\n\n      const left = currentText.substring(0, caretPosition - 1);\n      const right = currentText.substring(caretPosition);\n\n      setCurrentText(left + right);\n\n      console.log(caretPosition);\n\n      if (caretPosition !== 0 && caretPosition !== null) {\n        setCaretPosition(caretPosition - 1);\n      } else {\n        console.log(11);\n        setCaretPosition(0);\n      }\n\n      return;\n    }\n\n    if (caretPosition === null) {\n      return;\n    }\n\n    if (currentText === null || currentText === '') {\n      setCurrentText(e.key);\n      setCaretPosition(e.key.length);\n      return;\n    }\n\n    const left = currentText.substring(0, caretPosition);\n    const right = currentText.substring(caretPosition);\n\n    setCurrentText(left + e.key + right);\n\n    setCaretPosition(caretPosition + e.key.length);\n  }, [node, currentText, caretPosition]);\n\n  const handleBlur = useCallback(() => {\n    setX(null);\n    setY(null);\n\n    setHeight(null);\n  }, []);\n\n  useEffect(() => {\n    const range = new Range();\n    const selection = document.getSelection();\n\n    if (selection && selection.focusNode && caretPosition !== null) {\n      range.setStart(selection.focusNode, caretPosition);\n      range.collapse(true);\n      selection.removeAllRanges();\n      selection.addRange(range);\n\n      const {\n        x, y, height\n      } = getCoords(node, currentText);\n\n      setX(x);\n      setY(y);\n\n      setHeight(height);\n    }\n  }, [caretPosition, currentText, node]);\n\n  return {\n    handleClick,\n    handleChange,\n    handleBlur,\n    currentText,\n    height,\n    coords: {\n      x, y\n    }\n  };\n};\n","import {useCallback, useRef} from 'react';\nimport classNames from 'classnames/bind';\nimport styles from './styles.module.css';\nimport { Caret } from '../../caret';\nimport { useCaret } from '../../../hooks/use-caret';\nimport {TextListsWidgetProps} from './types';\n\nconst cx = classNames.bind(styles);\n\nconst Placeholder = () => (\n  <span className={cx('placeholder')}>\n    Enter your To-Do\n  </span>\n);\n\nexport const TextListsWidget = ({\n  text,\n  onBlur\n}: TextListsWidgetProps) => {\n  const refNode = useRef<HTMLDivElement>(null);\n\n  const {\n    handleClick,\n    handleChange,\n    handleBlur,\n    currentText,\n    height,\n    coords: {\n      x, y\n    }\n  } = useCaret(refNode, text);\n\n  const handleBlurTodo = useCallback(() => {\n    handleBlur();\n\n    if (currentText !== null && currentText !== '' && currentText !== text) {\n      onBlur?.(currentText);\n    }\n  }, [handleBlur, onBlur, currentText]);\n\n  return (\n    <div className={cx('wrapper')}>\n      <div\n        ref={refNode}\n        className={cx('text')}\n        onClick={handleClick}\n        onBlur={handleBlurTodo}\n        onKeyDown={handleChange}\n        tabIndex={0}\n        contentEditable={currentText !== null}\n        suppressContentEditableWarning\n      >\n        {currentText || <Placeholder />}\n        <Caret\n          coords={{\n            x, y, height\n          }}\n        />\n      </div>\n    </div>\n  )\n};\n","import { TextListsWidget } from './text';\n\nexport const widgets = {\n  text: TextListsWidget\n};\n","import { widgets } from './widgets';\n\nexport type ListsWidgetProps = {\n  type: keyof typeof widgets;\n  [key: string]: any,\n};\n\nexport const ListsWidget = ({\n  type, ...props\n}: ListsWidgetProps) => {\n  const Widget = widgets[type];\n\n  return (\n    // @ts-ignore\n    <Widget {...props} />\n  );\n};\n","import React, {Fragment} from 'react';\nimport classNames from 'classnames/bind';\nimport styles from './styles.module.css';\n\nconst cx = classNames.bind(styles);\n\ntype ListComponentsProps = {\n  children: React.ReactNode;\n}\n\nexport const ListComponents = ({ children }: ListComponentsProps) => (\n  <Fragment>\n    {\n      React.Children.map(children, (child) => (\n        <div className={cx('child')}>\n          {child}\n        </div>\n      ))\n    }\n  </Fragment>\n);\n","import classNames from 'classnames/bind';\nimport styles from './styles.module.css';\n\nconst cx = classNames.bind(styles);\n\ntype ListsProps = {\n  children: React.ReactNode;\n}\n\nexport const Lists = ({ children }: ListsProps) => (\n  <div className={cx('lists')}>\n    {children}\n  </div>\n);\n","import classNames from 'classnames/bind';\nimport styles from './styles.module.css';\n\nconst cx = classNames.bind(styles);\n\nexport type HeaderProps = {\n  children: React.ReactNode;\n}\n\nexport const Header = ({ children }: HeaderProps) => (\n  <div className={cx('header')}>\n    {children}\n  </div>\n)\n","import { useCallback, useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport classNames from 'classnames/bind';\nimport { ListsWidget } from './ui/lists-widgets/slot';\nimport { ListComponents } from './ui/list-components';\nimport { Lists } from './ui/lists';\nimport {Header} from './ui/header';\nimport styles from './styles.module.css';\n\nconst cx = classNames.bind(styles);\n\ntype Todo = {\n  id: string;\n  text: string;\n}\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  const handleBlur = useCallback((todo: string) => {\n    setTodos([\n      ...todos,\n      {\n        id: nanoid(),\n        text: todo\n      }\n    ]);\n  }, [todos]);\n\n  return (\n    <Lists>\n      <div className={cx('header')}>\n        <Header>\n          List Example\n        </Header>\n      </div>\n      <ListComponents>\n          {todos.map((todo) => (\n            <ListsWidget\n              key={todo.id}\n              type=\"text\"\n              text={todo.text}\n            />\n          ))}\n        <ListsWidget\n          key={nanoid()}\n          type=\"text\"\n          text={null}\n          onBlur={handleBlur}\n        />\n      </ListComponents>\n    </Lists>\n  );\n};\n","import { render } from 'react-dom';\nimport { App } from './app';\nimport './index.css';\n\nrender(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}